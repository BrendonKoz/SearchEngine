{"version":3,"sources":["src/Core.js","src/Tabs.js","src/Debugger.js","debug.js"],"names":["PWSE_Core","document","addEventListener","window","SearchEngine","dispatchEvent","CustomEvent","PWSE_Tabs","tabsParent","rememberActiveTab","tabContainers","querySelectorAll","length","forEach","tabContainer","tablist","querySelector","tabs","panels","currentTabNum","currentTabID","tabStash","localStorage","getItem","JSON","parse","hasOwnProperty","getAttribute","switchTab","oldTab","newTab","focus","removeAttribute","setAttribute","index","Array","prototype","indexOf","call","oldIndex","hidden","closest","setItem","stringify","tab","i","parentNode","e","preventDefault","currentTab","currentTarget","dir","which","panel","id","Tabs","PWSE_Debugger","debugContainers","configURL","ProcessWire","config","urls","admin","debugURL","debugContainer","debugButton","makeButton","icon","initIndex","initPage","initQuery","console","error","button","classList","add","fetch","then","response","text","data","innerText","innerHTML","highlight","findCollapsed","init","reindexButton","debugPageID","parseInt","debugPageInput","getElementById","previousSibling","target","contains","debugPageItem","match","value","dataQueue","pop","queueData","remove","push","click","debugQuery","debugQueryArgs","key","prevQuery","encodeURIComponent","node","style","transition","backgroundColor","setTimeout","label","parent","sticky","createElement","insertBefore","appendChild","collapsedSections","collapsedSection","maxHeight","tagName","height","scrollHeight","overflowY","collapseButton","nextSibling","Debugger"],"mappings":"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","file":"debug.js","sourceRoot":"..","sourcesContent":["/**\n * SearchEngine JS Core\n *\n * @version 0.1.1\n */\nclass PWSE_Core {\n\n    /**\n     * Constructor\n     */\n    constructor() {}\n\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    window.SearchEngine = new PWSE_Core();\n    document.dispatchEvent(new CustomEvent('SearchEngineConstructed'));\n});\n","/**\n * SearchEngine JS Tabs\n *\n * Based on https://inclusive-components.design/tabbed-interfaces/.\n *\n * @version 0.1.1\n */\nclass PWSE_Tabs {\n\n    /**\n     * Init method\n     *\n     * @param {?Object} tabsParent Optional parent node for tabs.\n     * @param {Boolean} rememberActiveTab Remember active tab?\n     */\n    init(tabsParent = null, rememberActiveTab = true) {\n\n        // find tab containers\n        let tabContainers = [];\n        tabsParent = typeof tabsParent === 'Object' ? tabsParent : document;\n        tabContainers = tabsParent.querySelectorAll('.pwse-tabs');\n        if (!tabContainers.length) return;\n\n        tabContainers.forEach(tabContainer => {\n\n            // get relevant elements and collections\n            const tablist = tabContainer.querySelector('[role=\"tablist\"]');\n            const tabs = tablist.querySelectorAll('[role=\"tab\"]');\n            const panels = tabContainer.querySelectorAll(':scope > [role=\"tabpanel\"]');\n\n            // get tab stash from localStorage\n            let currentTabNum = 0;\n            let currentTabID = null;\n            if (rememberActiveTab) {\n                let tabStash = localStorage.getItem('pwse-tabs');\n                tabStash = tabStash ? JSON.parse(tabStash) : {};\n                if (tabStash.hasOwnProperty(tabContainer.getAttribute('id'))) {\n                    currentTabID = tabStash[tabContainer.getAttribute('id')];\n                }\n            }\n\n            // the tab switching function\n            const switchTab = (oldTab, newTab) => {\n                newTab.focus();\n                // Make the active tab focusable by the user (Tab key)\n                newTab.removeAttribute('tabindex');\n                // Set the selected state\n                newTab.setAttribute('aria-selected', 'true');\n                oldTab.removeAttribute('aria-selected');\n                oldTab.setAttribute('tabindex', '-1');\n                // Get the indices of the new and old tabs to find the correct\n                // tab panels to show and hide\n                let index = Array.prototype.indexOf.call(tabs, newTab);\n                let oldIndex = Array.prototype.indexOf.call(tabs, oldTab);\n                panels[oldIndex].hidden = true;\n                panels[index].hidden = false;\n                if (rememberActiveTab) {\n                    let tabStash = localStorage.getItem('pwse-tabs');\n                    tabStash = tabStash ? JSON.parse(tabStash) : {};\n                    tabStash[newTab.closest('.pwse-tabs').getAttribute('id')] = newTab.getAttribute('id');\n                    localStorage.setItem('pwse-tabs', JSON.stringify(tabStash));\n                }\n            }\n\n            // add the tablist role to the first <ul> in the tab container\n            tablist.setAttribute('role', 'tablist');\n\n            // add semantics are remove user focusability for each tab\n            Array.prototype.forEach.call(tabs, (tab, i) => {\n                tab.setAttribute('role', 'tab');\n                tab.setAttribute('id', tabContainer.getAttribute('id') + '-' + (i + 1));\n                tab.setAttribute('tabindex', '-1');\n                tab.parentNode.setAttribute('role', 'presentation');\n\n                // check if this tab should be activated by default\n                if (rememberActiveTab && currentTabID === tab.getAttribute('id')) {\n                    currentTabNum = i;\n                }\n\n                // handle clicking of tabs for mouse users\n                tab.addEventListener('click', e => {\n                    e.preventDefault();\n                    let currentTab = tablist.querySelector('[aria-selected]');\n                    if (e.currentTarget !== currentTab) {\n                        switchTab(currentTab, e.currentTarget);\n                    }\n                });\n\n                // handle keydown events for keyboard users\n                tab.addEventListener('keydown', e => {\n                    // get the index of the current tab in the tabs node list\n                    let index = Array.prototype.indexOf.call(tabs, e.currentTarget);\n                    // work out which key the user is pressing and\n                    // calculate the new tab's index where appropriate\n                    let dir = e.which === 37 ? index - 1 : e.which === 39 ? index + 1 : e.which === 40 ? 'down' : null;\n                    if (dir !== null) {\n                        e.preventDefault();\n                        // if the down key is pressed, move focus to the open panel,\n                        // otherwise switch to the adjacent tab\n                        dir === 'down' ? panels[i].focus() : tabs[dir] ? switchTab(e.currentTarget, tabs[dir]) : void 0;\n                    }\n                });\n            });\n\n            // add tab panel semantics and hide them all\n            Array.prototype.forEach.call(panels, (panel, i) => {\n                panel.setAttribute('role', 'tabpanel');\n                panel.setAttribute('tabindex', '-1');\n                panel.setAttribute('aria-labelledby', tabs[i].id);\n                panel.hidden = true;\n            });\n\n            // activate current tab and reveal related tab panel\n            tabs[currentTabNum].removeAttribute('tabindex');\n            tabs[currentTabNum].setAttribute('aria-selected', 'true');\n            panels[currentTabNum].hidden = false;\n        })\n    }\n\n}\n\ndocument.addEventListener(\"SearchEngineConstructed\", function() {\n    window.SearchEngine.Tabs = new PWSE_Tabs();\n});\n","/**\n * SearchEngine JS Debugger\n *\n * @version 0.5.1\n */\nclass PWSE_Debugger {\n\n    /**\n     * Constructor method\n     */\n    constructor() {\n\n        // find debug containers\n        const debugContainers = document.querySelectorAll('.pwse-debug');\n\n        if (debugContainers.length) {\n\n            // define base url for debug requests\n            this.configURL = ProcessWire.config.urls.admin + 'module/edit?name=SearchEngine';\n            this.debugURL = this.configURL + '&se-debug=1&';\n\n            debugContainers.forEach(debugContainer => {\n\n                // add debug button\n                const debugButton = this.makeButton(debugContainer.getAttribute('data-debug-button-label'), debugContainer, true);\n                debugButton.icon.setAttribute('class', 'fa fa-bug');\n\n                switch (debugContainer.getAttribute('data-type')) {\n                    case 'index':\n                        this.initIndex(debugContainer, debugButton)\n                        break;\n                    case 'page':\n                        this.initPage(debugContainer, debugButton);\n                        break;\n                    case 'query':\n                        this.initQuery(debugContainer, debugButton);\n                        break;\n                    default:\n                        console.error('Unidentified debug container type (' + debugContainer.getAttribute('data-type') + ')');\n                }\n            });\n        }\n    }\n\n    /**\n     * Init index debug container\n     *\n     * @param {object} debugContainer\n     * @param {object} debugButton\n     */\n    initIndex(debugContainer, debugButton) {\n\n        // enable debug button\n        debugButton.button.removeAttribute('disabled');\n        debugButton.button.setAttribute('class', 'ui-button ui-state-default');\n\n        // listen to debug button click event\n        debugButton.button.addEventListener(\"click\", e => {\n            e.preventDefault();\n            debugButton.button.setAttribute('disabled', 'disabled');\n            debugButton.button.setAttribute('class', 'ui-button ui-state-disabled');\n            debugButton.icon.classList.add('fa-spin');\n            fetch(this.debugURL + 'se-debug-index=1')\n                .then(response => response.text())\n                .then(data => {\n\n                    // update debug button\n                    debugButton.text.innerText = debugContainer.getAttribute('data-refresh-button-label');\n                    debugButton.icon.setAttribute('class', 'fa fa-refresh');\n                    debugButton.button.removeAttribute('disabled');\n                    debugButton.button.setAttribute('class', 'ui-button ui-state-default');\n\n                    // update and highlight debug container\n                    debugContainer.innerHTML = data;\n                    debugContainer.setAttribute('style', 'margin-top: 2rem');\n                    this.highlight(debugContainer);\n\n                    // find collapsed sections\n                    this.findCollapsed(debugContainer);\n\n                    // init tabs\n                    window.SearchEngine.Tabs.init(debugContainer);\n                });\n        });\n    }\n\n    /**\n     * Init page debug container\n     *\n     * @param {object} debugContainer\n     * @param {object} debugButton\n     */\n    initPage(debugContainer, debugButton) {\n\n        // add \"reindex\" button\n        const reindexButton = this.makeButton(debugContainer.getAttribute('data-reindex-button-label'), debugContainer, true);\n\n        // get debug page ID\n        let debugPageID = parseInt(debugContainer.getAttribute('data-page-id'));\n        if (debugPageID) {\n            debugButton.button.removeAttribute('disabled');\n            debugButton.button.setAttribute('class', 'ui-button ui-state-default');\n            reindexButton.button.removeAttribute('disabled');\n            reindexButton.button.setAttribute('class', 'ui-button ui-state-default');\n        }\n\n        // listen to page select event\n        const debugPageInput = document.getElementById('Inputfield_debugger_page');\n        debugPageInput.previousSibling.addEventListener(\"click\", e => {\n            if (!e.target.parentNode.classList.contains('PageListActionSelect')) return;\n            let debugPageItem = e.target.closest('.PageListItem');\n            debugPageID = debugPageItem.getAttribute('class').match(/(?!PageList)([0-9])+/)[0];\n            debugContainer.innerHTML = '';\n            debugContainer.setAttribute('style', 'margin-top: 0');\n            debugButton.text.innerText = debugContainer.getAttribute('data-debug-button-label');\n            debugButton.icon.setAttribute('class', 'fa fa-bug');\n            if (debugPageID && (debugPageInput.value != debugPageID)) {\n                debugButton.button.removeAttribute('disabled');\n                debugButton.button.setAttribute('class', 'ui-button ui-state-default');\n                reindexButton.button.removeAttribute('disabled');\n                reindexButton.button.setAttribute('class', 'ui-button ui-state-default');\n            } else {\n                debugButton.button.setAttribute('disabled', 'disabled')\n                debugButton.button.setAttribute('class', 'ui-button ui-state-disabled');\n                reindexButton.button.setAttribute('disabled', 'disabled')\n                reindexButton.button.setAttribute('class', 'ui-button ui-state-disabled');\n            }\n        }, true);\n\n        // data queue\n        const dataQueue = [];\n\n        // listen to debug button click event\n        debugButton.button.addEventListener(\"click\", e => {\n            e.preventDefault();\n            debugButton.button.setAttribute('disabled', 'disabled');\n            debugButton.button.setAttribute('class', 'ui-button ui-state-disabled');\n            debugButton.icon.classList.add('fa-spin');\n            fetch(this.debugURL + 'se-debug-page-id=' + debugPageID)\n                .then(response => response.text())\n                .then(data => {\n                    debugButton.text.innerText = debugContainer.getAttribute('data-refresh-button-label');\n                    debugButton.icon.setAttribute('class', 'fa fa-refresh');\n                    debugButton.button.removeAttribute('disabled');\n                    debugButton.button.setAttribute('class', 'ui-button ui-state-default');\n                    debugContainer.innerHTML = data;\n                    if (dataQueue.length) {\n                        debugContainer.innerHTML = dataQueue.pop() + debugContainer.innerHTML;\n                    }\n                    const queueData = debugContainer.queueData\n                    debugContainer.setAttribute('style', 'margin-top: 2rem');\n                    this.highlight(debugContainer);\n                    this.findCollapsed(debugContainer);\n                    window.SearchEngine.Tabs.init(debugContainer);\n                });\n        });\n\n        // listen to reindex button click event\n        reindexButton.button.addEventListener(\"click\", e => {\n            e.preventDefault();\n            reindexButton.button.setAttribute('disabled', 'disabled');\n            reindexButton.button.setAttribute('class', 'ui-button ui-state-disabled');\n            reindexButton.icon.classList.add('fa-spin');\n            fetch(this.debugURL + 'se-reindex-page-id=' + debugPageID)\n                .then(response => response.text())\n                .then(data => {\n                    reindexButton.icon.classList.remove('fa-spin');\n                    reindexButton.button.removeAttribute('disabled');\n                    reindexButton.button.setAttribute('class', 'ui-button ui-state-default');\n                    dataQueue.push(data);\n                    debugButton.button.click();\n                });\n        });\n    }\n\n    /**\n     * Init query debug container\n     *\n     * @param {object} debugContainer\n     * @param {object} debugButton\n     */\n    initQuery(debugContainer, debugButton) {\n\n        // get debug query\n        let debugQuery = debugContainer.getAttribute('data-query');\n        if (debugQuery) {\n            debugButton.button.removeAttribute('disabled');\n            debugButton.button.setAttribute('class', 'ui-button ui-state-default');\n        }\n\n        // get debug query args\n        const debugQueryArgs = document.getElementById('Inputfield_debugger_query_args');\n\n        // listen to keyup event\n        document.getElementById('Inputfield_debugger_query').addEventListener(\"keyup\", function(e) {\n            if (e.key == 'Enter') {\n                e.preventDefault();\n            }\n            debugQuery = e.target.value;\n            if (debugQuery) {\n                debugButton.button.removeAttribute('disabled');\n                debugButton.button.setAttribute('class', 'ui-button ui-state-default');\n                debugButton.text\n                    .innerText = debugContainer.getAttribute('data-' + (debugQuery == prevQuery ? 'refresh' : 'debug') + '-button-label');\n                if (e.key == 'Enter') {\n                    debugButton.button.click();\n                }\n            } else {\n                debugButton.button.setAttribute('disabled', 'disabled');\n                debugButton.button.setAttribute('class', 'ui-button ui-state-disabled');\n                debugButton.text\n                    .innerText = debugContainer.getAttribute('data-debug-button-label');\n            }\n        });\n\n        // listen to debug button click event\n        let prevQuery = debugQuery;\n        debugButton.button.addEventListener(\"click\", e => {\n            e.preventDefault();\n            debugButton.button.setAttribute('disabled', 'disabled');\n            debugButton.button.setAttribute('class', 'ui-button ui-state-disabled');\n            debugButton.icon.classList.add('fa-spin');\n            fetch(\n                this.debugURL\n                + 'se-debug-query=' + encodeURIComponent(debugQuery)\n                + '&se-debug-query-args=' + encodeURIComponent(JSON.stringify(JSON.parse(debugQueryArgs.value)))\n            )\n                .then(response => response.text())\n                .then(data => {\n                    prevQuery = debugQuery;\n                    debugButton.text.innerText = debugContainer.getAttribute('data-refresh-button-label');\n                    debugButton.icon.setAttribute('class', 'fa fa-refresh');\n                    debugButton.button.removeAttribute('disabled');\n                    debugButton.button.setAttribute('class', 'ui-button ui-state-default');\n                    debugContainer.innerHTML = data;\n                    debugContainer.setAttribute('style', 'margin-top: 2rem');\n                    this.highlight(debugContainer);\n                    window.SearchEngine.Tabs.init(debugContainer);\n                });\n        });\n    }\n\n    /**\n     * Highlight (blink/flash) a DOM node\n     *\n     * @param {object} node DOM node\n     */\n    highlight(node) {\n        node.style.transition = 'all .25s ease-in-out';\n        node.style.backgroundColor = 'lightyellow';\n        setTimeout(() => {\n            node.style.backgroundColor = null;\n            setTimeout(() => {\n                node.style.transition = null;\n            }, 250);\n        }, 1000);\n    }\n\n    /**\n     * Create new button\n     *\n     * @param {string} label Label for the button\n     * @param {object} [parent] Parent DOM node\n     * @param {boolean} [sticky] Sticky button?\n     * @return {object} Button\n     */\n    makeButton(label, parent, sticky) {\n        const button = {\n            button: document.createElement('button'),\n            text: document.createElement('span'),\n            icon: document.createElement('i'),\n        };\n        button.button.setAttribute('class', 'ui-button ui-state-disabled');\n        button.button.setAttribute('disabled', 'disabled');\n        if (typeof sticky !== 'undefined' && sticky !== false) {\n            button.button.setAttribute('style', 'position: sticky; top: 1rem; z-index: 1');\n        }\n        if (typeof parent !== 'undefined') {\n            parent.parentNode.insertBefore(button.button, parent);\n        }\n        button.text.innerText = label;\n        button.button.appendChild(button.text);\n        button.icon.setAttribute('class', 'fa fa-refresh');\n        button.icon.setAttribute('style', 'margin-left: .5rem');\n        button.button.appendChild(button.icon);\n        return button;\n    }\n\n    /**\n     * Find collapsed elements and add show more/less buttons\n     *\n     * @param {object} parent Parent DOM node\n     */\n    findCollapsed(parent) {\n        const maxHeight = 400;\n        const collapsedSections = parent.querySelectorAll('.pwse-collapse');\n        if (collapsedSections.length) {\n            collapsedSections.forEach(collapsedSection => {\n                collapsedSection.style.maxHeight = maxHeight + 'px';\n                if (collapsedSection.tagName === 'TEXTAREA') {\n                    collapsedSection.style.height = (collapsedSection.scrollHeight + 2) + 'px';\n                }\n                collapsedSection.style.overflowY = 'auto';\n                if ((collapsedSection.scrollHeight + 2) > maxHeight) {\n                    const collapseButton = this.makeButton(parent.getAttribute('data-show-more-button-label'));\n                    collapseButton.button.setAttribute('class', 'ui-button ui-state-default');\n                    collapseButton.icon.setAttribute('class', 'fa fa-chevron-down');\n                    collapseButton.button.addEventListener('click', e => {\n                        e.preventDefault();\n                        if (collapsedSection.style.maxHeight) {\n                            collapsedSection.style.maxHeight = null;\n                            collapseButton.text.innerText = parent.getAttribute('data-show-less-button-label');\n                            collapseButton.icon.setAttribute('class', 'fa fa-chevron-up');\n                        } else {\n                            collapsedSection.style.maxHeight = maxHeight + 'px';\n                            collapseButton.text.innerText = parent.getAttribute('data-show-more-button-label');\n                            collapseButton.icon.setAttribute('class', 'fa fa-chevron-down');\n                        }\n                        collapseButton.button.removeAttribute('disabled');\n                        collapseButton.button.setAttribute('class', 'ui-button ui-state-default');\n                        this.highlight(collapsedSection);\n                    });\n                    collapseButton.button.removeAttribute('disabled');\n                    collapsedSection.parentNode.insertBefore(collapseButton.button, collapsedSection.nextSibling);\n                }\n            });\n        }\n    }\n\n}\n\ndocument.addEventListener(\"SearchEngineConstructed\", function() {\n    window.SearchEngine.Debugger = new PWSE_Debugger();\n});\n","import './src/Core.js'\nimport './src/Tabs.js'\nimport './src/Debugger.js'\n"]}